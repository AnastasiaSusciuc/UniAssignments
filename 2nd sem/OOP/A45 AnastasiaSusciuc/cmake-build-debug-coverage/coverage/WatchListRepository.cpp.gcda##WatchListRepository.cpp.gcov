        -:    0:Source:C:/Users/susci/Desktop/2nd sem/GA/untitled/Repository/WatchListRepository.cpp
        -:    0:Graph:C:\Users\susci\Desktop\2nd sem\GA\untitled\cmake-build-debug-coverage\CMakeFiles\untitled.dir\Repository\WatchListRepository.cpp.gcno
        -:    0:Data:C:\Users\susci\Desktop\2nd sem\GA\untitled\cmake-build-debug-coverage\CMakeFiles\untitled.dir\Repository\WatchListRepository.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by susci on 3/31/2021.
        -:    3://
        -:    4:
        -:    5:#include "WatchListRepository.h"
        -:    6:
        -:    7:WatchListRepository::WatchListRepository() = default;
        -:    8:
        -:    9:WatchListRepository::~WatchListRepository() = default;
        -:   10:
       14:   11:int WatchListRepository::user_add_tutorial_in_repository(const Tutorial &tutorial) {
       19:   12:    for (int i = 0; i < tutorials_list.size(); i++)
       14:   12-block  0
       19:   12-block  1
        5:   12-block  2
        -:   13:    {
        7:   14:        Tutorial tutorial_i = tutorials_list[i];
        7:   14-block  0
        7:   14-block  1
    $$$$$:   14-block  2
        7:   15:        if (tutorial_i.get_link() == tutorial.get_link())
        7:   15-block  0
        7:   15-block  1
        7:   15-block  2
        2:   16:            return 1;
        2:   16-block  0
        -:   17:    }
       12:   18:    tutorials_list.append(tutorial);
       12:   18-block  0
       12:   18-block  1
    $$$$$:   18-block  2
       12:   19:    return 0;
        -:   20:}
        -:   21:
        4:   22:int WatchListRepository::user_remove_tutorial_in_repository(const std::string &tutorial_link) {
        7:   23:    for (int i = 0; i < tutorials_list.size(); i++)
        4:   23-block  0
        7:   23-block  1
        3:   23-block  2
        -:   24:    {
        5:   25:        Tutorial tutorial_i = tutorials_list[i];
        5:   25-block  0
        5:   25-block  1
    $$$$$:   25-block  2
        5:   26:        if (tutorial_i.get_link() == tutorial_link)
        5:   26-block  0
        5:   26-block  1
        -:   27:        {
        2:   28:            tutorials_list.remove(tutorial_i);
        2:   28-block  0
        2:   29:            return 0;
        2:   29-block  0
        -:   30:        }
        -:   31:    }
        2:   32:    return 1;
        2:   32-block  0
        -:   33:}
        -:   34:
        -:   35://int WatchListRepository::user_update_tutorial_in_repository(const std::string &tutorial_to_update_link,
        -:   36://                                                             const std::string &new_tutorial_title,
        -:   37://                                                             const std::string &new_tutorial_presenter,
        -:   38://                                                             const std::pair<int, int> &new_duration,
        -:   39://                                                             int new_number_of_likes) {
        -:   40://    for (int i = 0; i < tutorials_list.size(); i++)
        -:   41://    {
        -:   42://        if (tutorials_list[i].get_link() == tutorial_to_update_link)
        -:   43://        {
        -:   44://            tutorials_list[i].set_title(new_tutorial_title);
        -:   45://            tutorials_list[i].set_presenter(new_tutorial_presenter);
        -:   46://            tutorials_list[i].set_duration(new_duration);
        -:   47://            tutorials_list[i].set_likes(new_number_of_likes);
        -:   48://            return 0;
        -:   49://        }
        -:   50://    }
        -:   51://    return 1;
        -:   52://}
        -:   53://
        6:   54:int WatchListRepository::size_tutorials_list() const {
        6:   55:    return tutorials_list.size();
        6:   55-block  0
        -:   56:}
        -:   57:
        3:   58:Tutorial WatchListRepository::get_tutorial_by_position(int position) {
        3:   59:    if (position < 0 || position >= tutorials_list.size())
        3:   59-block  0
        3:   59-block  1
        1:   59-block  2
        2:   59-block  3
        3:   59-block  4
        1:   60:        throw std::runtime_error("Invalid position");
        1:   60-block  0
        1:   60-block  1
    $$$$$:   60-block  2
        2:   61:    return tutorials_list[position];
        2:   61-block  0
        -:   62:}
        -:   63:
        2:   64:std::vector<Tutorial> WatchListRepository::all_tutorials_from_repository() {
        2:   65:    std::vector <Tutorial> all_tutorials;
        2:   65-block  0
        -:   66:
        2:   67:    all_tutorials.reserve(tutorials_list.size());
        6:   68:    for (int i = 0; i < tutorials_list.size(); i++) {
        2:   68-block  0
        6:   68-block  1
        4:   68-block  2
        4:   69:        all_tutorials.push_back(tutorials_list[i]);
        4:   69-block  0
        4:   69-block  1
        -:   70:    }
        -:   71:
        2:   72:    return all_tutorials;
        2:   72-block  0
        2:   72-block  1
        -:   73:}
