        -:    0:Source:C:/Users/susci/Desktop/2nd sem/GA/untitled/Tests/tests.cpp
        -:    0:Graph:C:\Users\susci\Desktop\2nd sem\GA\untitled\cmake-build-debug-coverage\CMakeFiles\untitled.dir\Tests\tests.cpp.gcno
        -:    0:Data:C:\Users\susci\Desktop\2nd sem\GA\untitled\cmake-build-debug-coverage\CMakeFiles\untitled.dir\Tests\tests.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by susci on 3/20/2021.
        -:    3://
        -:    4:
        -:    5:#include "tests.h"
        -:    6:#include "../DynamicVector/DynamicVector.h"
        -:    7:#include "../Service/AdminService.h"
        -:    8:#include "../Repository/WatchListRepository.h"
        -:    9:#include "../Service/UserService.h"
        -:   10:
        1:   11:void Tests::run_all_tests() {
        -:   12:    //std::cout << "Tests started!\n";
        1:   13:    run_domain_tests();
        1:   13-block  0
        1:   14:    run_dynamic_array_tests();
        1:   15:    run_repository_tests();
        1:   16:    run_admin_service_tests();
        -:   17:    //std::cout << "Tests ended!\n";
        1:   18:}
        -:   19:
        -:   20:// ------ domain Tests -------------------------------------------------------------------------------------------------
        1:   21:void Tests::create_tutorial_test() {
        -:   22:
        3:   23:    Tutorial tutorial_test = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:   23-block  0
        1:   23-block  1
        1:   23-block  2
        1:   23-block  3
        1:   23-block  4
        1:   23-block  5
    $$$$$:   23-block  6
    $$$$$:   23-block  7
    $$$$$:   23-block  8
    $$$$$:   23-block  9
    $$$$$:   23-block 10
    $$$$$:   23-block 11
    $$$$$:   23-block 12
    $$$$$:   23-block 13
    $$$$$:   23-block 14
        -:   24:
       1*:   25:    assert(tutorial_test.get_title() == "TEST");
        1:   25-block  0
    %%%%%:   25-block  1
        1:   25-block  2
    %%%%%:   25-block  3
       1*:   26:    assert(tutorial_test.get_presenter() == "ANI");
        1:   26-block  0
        1:   26-block  1
    %%%%%:   26-block  2
        1:   26-block  3
    %%%%%:   26-block  4
       1*:   27:    assert(tutorial_test.get_duration() == std::make_pair(21, 10));
        1:   27-block  0
        1:   27-block  1
        1:   27-block  2
    %%%%%:   27-block  3
        1:   27-block  4
    %%%%%:   27-block  5
    $$$$$:   27-block  6
    $$$$$:   27-block  7
    $$$$$:   27-block  8
       1*:   28:    assert(tutorial_test.get_number_of_likes() == 5);
        1:   28-block  0
        1:   28-block  1
    %%%%%:   28-block  2
        1:   28-block  3
    %%%%%:   28-block  4
       1*:   29:    assert(tutorial_test.get_link() == "https://www.youtube.com/watch?v=BSzSn-PRdtI");
        1:   29-block  0
        1:   29-block  1
    %%%%%:   29-block  2
        1:   29-block  3
    %%%%%:   29-block  4
        -:   30:
        1:   31:    tutorial_test.set_title("CHANGED TITLE");
        1:   31-block  0
        1:   31-block  1
        1:   31-block  2
    $$$$$:   31-block  3
    $$$$$:   31-block  4
    $$$$$:   31-block  5
    $$$$$:   31-block  6
        1:   32:    tutorial_test.set_presenter("CHANGED PRESENTER");
        1:   32-block  0
        1:   32-block  1
    $$$$$:   32-block  2
    $$$$$:   32-block  3
    $$$$$:   32-block  4
    $$$$$:   32-block  5
        1:   33:    tutorial_test.set_duration(std::make_pair(9, 9));
        1:   33-block  0
    $$$$$:   33-block  1
    $$$$$:   33-block  2
    $$$$$:   33-block  3
        1:   34:    tutorial_test.set_likes(10);
        1:   34-block  0
        1:   35:    tutorial_test.set_link("https://www.youtube.com/watch?v=fwK7ggA3-bU");
        1:   35-block  0
        1:   35-block  1
        1:   35-block  2
    $$$$$:   35-block  3
    $$$$$:   35-block  4
    $$$$$:   35-block  5
    $$$$$:   35-block  6
        -:   36:
       1*:   37:    assert(tutorial_test.get_title() == "CHANGED TITLE");
        1:   37-block  0
    %%%%%:   37-block  1
        1:   37-block  2
    %%%%%:   37-block  3
       1*:   38:    assert(tutorial_test.get_presenter() == "CHANGED PRESENTER");
        1:   38-block  0
        1:   38-block  1
    %%%%%:   38-block  2
        1:   38-block  3
    %%%%%:   38-block  4
       1*:   39:    assert(tutorial_test.get_duration() == std::make_pair(9, 9));
        1:   39-block  0
        1:   39-block  1
        1:   39-block  2
    %%%%%:   39-block  3
        1:   39-block  4
    %%%%%:   39-block  5
    $$$$$:   39-block  6
    $$$$$:   39-block  7
    $$$$$:   39-block  8
       1*:   40:    assert(tutorial_test.get_number_of_likes() == 10);
        1:   40-block  0
        1:   40-block  1
    %%%%%:   40-block  2
        1:   40-block  3
    %%%%%:   40-block  4
       1*:   41:    assert(tutorial_test.get_link() == "https://www.youtube.com/watch?v=fwK7ggA3-bU");
        1:   41-block  0
        1:   41-block  1
    %%%%%:   41-block  2
        1:   41-block  3
    %%%%%:   41-block  4
        -:   42:
        1:   43:}
        -:   44:
        1:   45:void Tests::run_domain_tests() {
        1:   46:    create_tutorial_test();
        1:   46-block  0
        -:   47:    //std::cout << "DOMAIN TESTS FINISHED\n";
        1:   48:}
        -:   49:// ------ dynamic array Tests ------------------------------------------------------------------------------------------
        -:   50:
        1:   51:void Tests::create_dynamic_array_test()
        -:   52:{
        2:   53:    DynamicVector<int> array{10};
        1:   53-block  0
        1:   53-block  1
    $$$$$:   53-block  2
       1*:   54:    assert(array.capacity() == 10);
        1:   54-block  0
    %%%%%:   54-block  1
        1:   54-block  2
    %%%%%:   54-block  3
        1:   55:}
        -:   56:
        1:   57:void Tests::resize_dynamic_array_test()
        -:   58:{
        2:   59:    DynamicVector<int> array{10};
        1:   59-block  0
        1:   59-block  1
    $$$$$:   59-block  2
       1*:   60:    assert(array.capacity() == 10);
        1:   60-block  0
    %%%%%:   60-block  1
        1:   60-block  2
    %%%%%:   60-block  3
        1:   61:    array.resize_dynamic_vector();
        1:   61-block  0
       1*:   62:    assert(array.capacity() == 20);
        1:   62-block  0
    %%%%%:   62-block  1
        1:   62-block  2
    %%%%%:   62-block  3
        1:   63:}
        -:   64:
        1:   65:void Tests::add_element_in_dynamic_array_test()
        -:   66:{
        2:   67:    DynamicVector<int> array{3};
        1:   67-block  0
        1:   67-block  1
    $$$$$:   67-block  2
        1:   68:    array.append(2);
        1:   68-block  0
        1:   69:    array.append(21);
        1:   69-block  0
        1:   70:    array.append(3);
        1:   70-block  0
        1:   71:    array.append(31);
        1:   71-block  0
        1:   72:    array.append(4);
        1:   72-block  0
       1*:   73:    assert(array.size() == 5);
        1:   73-block  0
    %%%%%:   73-block  1
        1:   73-block  2
    %%%%%:   73-block  3
       1*:   74:    assert(array.capacity() == 6);
        1:   74-block  0
    %%%%%:   74-block  1
        1:   74-block  2
    %%%%%:   74-block  3
        1:   75:}
        -:   76:
        1:   77:void Tests::search_element_in_dynamic_array_test()
        -:   78:{
        2:   79:    DynamicVector<int> array{10};
        1:   79-block  0
        1:   79-block  1
    $$$$$:   79-block  2
        1:   80:    array.append(2);
        1:   80-block  0
        1:   81:    array.append(21);
        1:   81-block  0
        1:   82:    array.append(3);
        1:   82-block  0
        1:   83:    array.append(31);
        1:   83-block  0
        1:   84:    array.append(4);
        1:   84-block  0
       1*:   85:    assert(array.size() == 5);
        1:   85-block  0
    %%%%%:   85-block  1
        1:   85-block  2
    %%%%%:   85-block  3
        -:   86:
        1:   87:    int position_found = array.search_element(21);
        1:   87-block  0
       1*:   88:    assert(position_found == 1);
    %%%%%:   88-block  0
        1:   88-block  1
    %%%%%:   88-block  2
        -:   89:
        1:   90:    int position_not_found = array.search_element(9);
        1:   90-block  0
       1*:   91:    assert(position_not_found == -1);
    %%%%%:   91-block  0
        1:   91-block  1
    %%%%%:   91-block  2
        1:   92:}
        -:   93:
        1:   94:void Tests::remove_element_in_dynamic_array_test()
        -:   95:{
        2:   96:    DynamicVector<int> array{10};
        1:   96-block  0
        1:   96-block  1
    $$$$$:   96-block  2
        1:   97:    array.append(2);
        1:   97-block  0
        1:   98:    array.append(21);
        1:   98-block  0
        1:   99:    array.append(3);
        1:   99-block  0
        1:  100:    array.append(31);
        1:  100-block  0
        1:  101:    array.append(4);
        1:  101-block  0
       1*:  102:    assert(array.size() == 5);
        1:  102-block  0
    %%%%%:  102-block  1
        1:  102-block  2
    %%%%%:  102-block  3
        -:  103:
        1:  104:    array.remove(4);
        1:  104-block  0
       1*:  105:    assert(array.size() == 4);
    %%%%%:  105-block  0
        1:  105-block  1
    %%%%%:  105-block  2
        -:  106:
        1:  107:    array.remove(9);
        1:  107-block  0
       1*:  108:    assert(array.size() == 4);
    %%%%%:  108-block  0
        1:  108-block  1
    %%%%%:  108-block  2
        -:  109:
        1:  110:    array.remove(2);
        1:  110-block  0
       1*:  111:    assert(array.size() == 3);
    %%%%%:  111-block  0
        1:  111-block  1
    %%%%%:  111-block  2
        -:  112:
       1*:  113:    assert(array[0] == 21);
        1:  113-block  0
        1:  113-block  1
    %%%%%:  113-block  2
        1:  113-block  3
    %%%%%:  113-block  4
       1*:  114:    assert(array[1] == 3);
        1:  114-block  0
        1:  114-block  1
    %%%%%:  114-block  2
        1:  114-block  3
    %%%%%:  114-block  4
       1*:  115:    assert(array[2] == 31);
        1:  115-block  0
        1:  115-block  1
    %%%%%:  115-block  2
        1:  115-block  3
    %%%%%:  115-block  4
        -:  116:
        1:  117:}
        -:  118:
        1:  119:void Tests::update_element_in_dynamic_array_test()
        -:  120:{
        2:  121:    DynamicVector<int> array{10};
        1:  121-block  0
        1:  121-block  1
    $$$$$:  121-block  2
        1:  122:    array.append(2);
        1:  122-block  0
        1:  123:    array.append(21);
        1:  123-block  0
        1:  124:    array.append(3);
        1:  124-block  0
        1:  125:    array.append(31);
        1:  125-block  0
        1:  126:    array.append(4);
        1:  126-block  0
        -:  127:
       1*:  128:    assert(array.size() == 5);
        1:  128-block  0
    %%%%%:  128-block  1
        1:  128-block  2
    %%%%%:  128-block  3
       1*:  129:    assert(array[1] == 21);
        1:  129-block  0
        1:  129-block  1
    %%%%%:  129-block  2
        1:  129-block  3
    %%%%%:  129-block  4
        -:  130:
        1:  131:    array.update(21, 51);
        1:  131-block  0
        -:  132:
       1*:  133:    assert(array.size() == 5);
    %%%%%:  133-block  0
        1:  133-block  1
    %%%%%:  133-block  2
        -:  134:
       1*:  135:    assert(array[0] == 2);
        1:  135-block  0
        1:  135-block  1
    %%%%%:  135-block  2
        1:  135-block  3
    %%%%%:  135-block  4
       1*:  136:    assert(array[1] == 51);
        1:  136-block  0
        1:  136-block  1
    %%%%%:  136-block  2
        1:  136-block  3
    %%%%%:  136-block  4
       1*:  137:    assert(array[2] == 3);
        1:  137-block  0
        1:  137-block  1
    %%%%%:  137-block  2
        1:  137-block  3
    %%%%%:  137-block  4
       1*:  138:    assert(array[3] == 31);
        1:  138-block  0
        1:  138-block  1
    %%%%%:  138-block  2
        1:  138-block  3
    %%%%%:  138-block  4
       1*:  139:    assert(array[4] == 4);
        1:  139-block  0
        1:  139-block  1
    %%%%%:  139-block  2
        1:  139-block  3
    %%%%%:  139-block  4
        -:  140:
        -:  141:    try {
        1:  142:        array[10];
        1:  142-block  0
        -:  143:    }
        1:  144:    catch (std::exception Exception){
        1:  144-block  0
        -:  145:        assert(true);
        -:  146:    }
        -:  147:
        1:  148:}
        -:  149:
        1:  150:void Tests::run_dynamic_array_tests() {
        1:  151:    create_dynamic_array_test();
        1:  151-block  0
        1:  152:    resize_dynamic_array_test();
        1:  153:    add_element_in_dynamic_array_test();
        1:  154:    search_element_in_dynamic_array_test();
        1:  155:    remove_element_in_dynamic_array_test();
        1:  156:    update_element_in_dynamic_array_test();
        -:  157:    //std::cout << "DYNAMIC ARRAY TESTS FINISHED\n";
        1:  158:}
        -:  159:
        -:  160:// ------ repository Tests ---------------------------------------------------------------------------------------------
        -:  161:
        1:  162:void Tests::run_repository_tests() {
        1:  163:    run_admin_repository_tests();
        1:  163-block  0
        1:  164:    run_user_repository_tests();
        1:  165:}
        -:  166:
        1:  167:void Tests::run_admin_repository_tests() {
        1:  168:    create_repository_test();
        1:  168-block  0
        1:  169:    add_tutorial_in_repository_test();
        1:  170:    remove_tutorial_from_repository_test();
        1:  171:    update_tutorial_from_repository_test();
        1:  172:    all_tutorials_from_repository_test();
        1:  173:    admin_increase_likes_in_repository_test();
        -:  174:
        1:  175:}
        -:  176:
        1:  177:void Tests::run_user_repository_tests() {
        1:  178:    create_watchlist_repository_test();
        1:  178-block  0
        1:  179:    add_tutorial_in_watchlist_test();
        1:  180:    remove_tutorial_from_watchlist_test();
        1:  181:    all_tutorials_from_watchlist_test();
        1:  182:    get_tutorial_by_position_test();
        1:  183:}
        -:  184:
        -:  185:
        1:  186:void Tests::create_repository_test() {
        2:  187:    Repository repository;
        1:  187-block  0
        1:  187-block  1
    $$$$$:  187-block  2
       1*:  188:    assert(repository.size_tutorials_list() == 0);
        1:  188-block  0
        1:  188-block  1
    %%%%%:  188-block  2
        1:  188-block  3
    %%%%%:  188-block  4
        -:  189:    //std::cout << "REPO CREATE TESTS FINISHED\n";
        1:  190:}
        -:  191:
        1:  192:void Tests::add_tutorial_in_repository_test() {
        2:  193:    Repository repository;
        1:  193-block  0
    $$$$$:  193-block  1
        3:  194:    Tutorial tutorial_test = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:  194-block  0
        1:  194-block  1
        1:  194-block  2
        1:  194-block  3
        1:  194-block  4
        1:  194-block  5
    $$$$$:  194-block  6
    $$$$$:  194-block  7
    $$$$$:  194-block  8
    $$$$$:  194-block  9
    $$$$$:  194-block 10
    $$$$$:  194-block 11
    $$$$$:  194-block 12
    $$$$$:  194-block 13
    $$$$$:  194-block 14
        -:  195:
        1:  196:    int success = repository.admin_add_tutorial_in_repository(tutorial_test);
       1*:  197:    assert(repository.size_tutorials_list() == 1);
        1:  197-block  0
        1:  197-block  1
    %%%%%:  197-block  2
        1:  197-block  3
    %%%%%:  197-block  4
       1*:  198:    assert(success == 0);
        1:  198-block  0
    %%%%%:  198-block  1
        1:  198-block  2
    %%%%%:  198-block  3
        -:  199:
        1:  200:    int not_success = repository.admin_add_tutorial_in_repository(tutorial_test);
        1:  200-block  0
       1*:  201:    assert(repository.size_tutorials_list() == 1);
        1:  201-block  0
        1:  201-block  1
    %%%%%:  201-block  2
        1:  201-block  3
    %%%%%:  201-block  4
       1*:  202:    assert(not_success == 1);
        1:  202-block  0
    %%%%%:  202-block  1
        1:  202-block  2
    %%%%%:  202-block  3
        -:  203:    //std::cout << "REPO ADD TESTS FINISHED\n";
        1:  204:}
        -:  205:
        1:  206:void Tests::remove_tutorial_from_repository_test() {
        2:  207:    Repository repository;
        1:  207-block  0
    $$$$$:  207-block  1
        3:  208:    Tutorial tutorial_test1 = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:  208-block  0
        1:  208-block  1
        1:  208-block  2
        1:  208-block  3
        1:  208-block  4
    $$$$$:  208-block  5
    $$$$$:  208-block  6
    $$$$$:  208-block  7
    $$$$$:  208-block  8
    $$$$$:  208-block  9
    $$$$$:  208-block 10
    $$$$$:  208-block 11
    $$$$$:  208-block 12
    $$$$$:  208-block 13
        3:  209:    Tutorial tutorial_test2 = {"TEST2", "MARA", std::make_pair(22, 10), 6, "https://www.youtube.com/watch?v=8RVKLcaIAE8"};
        1:  209-block  0
        1:  209-block  1
        1:  209-block  2
        1:  209-block  3
        1:  209-block  4
    $$$$$:  209-block  5
    $$$$$:  209-block  6
    $$$$$:  209-block  7
    $$$$$:  209-block  8
    $$$$$:  209-block  9
    $$$$$:  209-block 10
    $$$$$:  209-block 11
    $$$$$:  209-block 12
    $$$$$:  209-block 13
        -:  210:
        -:  211:    int success;
        1:  212:    success = repository.admin_add_tutorial_in_repository(tutorial_test1);
       1*:  213:    assert(success == 0);
        1:  213-block  0
    %%%%%:  213-block  1
        1:  213-block  2
    %%%%%:  213-block  3
        1:  214:    success = repository.admin_add_tutorial_in_repository(tutorial_test2);
        1:  214-block  0
       1*:  215:    assert(success == 0);
        1:  215-block  0
    %%%%%:  215-block  1
        1:  215-block  2
    %%%%%:  215-block  3
        -:  216:
        1:  217:    success = repository.admin_remove_tutorial_in_repository("https://www.youtube.com/watch?v=BSzSn-PRdtI");
        1:  217-block  0
        1:  217-block  1
        1:  217-block  2
    $$$$$:  217-block  3
    $$$$$:  217-block  4
    $$$$$:  217-block  5
    $$$$$:  217-block  6
       1*:  218:    assert(success == 0);
    %%%%%:  218-block  0
        1:  218-block  1
    %%%%%:  218-block  2
        -:  219:
       1*:  220:    assert(repository.size_tutorials_list() == 1);
        1:  220-block  0
        1:  220-block  1
    %%%%%:  220-block  2
        1:  220-block  3
    %%%%%:  220-block  4
        -:  221:
        1:  222:    success = repository.admin_remove_tutorial_in_repository("not a link");
        1:  222-block  0
        1:  222-block  1
        1:  222-block  2
    $$$$$:  222-block  3
    $$$$$:  222-block  4
    $$$$$:  222-block  5
    $$$$$:  222-block  6
       1*:  223:    assert(success == 1);
    %%%%%:  223-block  0
        1:  223-block  1
    %%%%%:  223-block  2
        -:  224:    //::cout << "REPO REMOVE TESTS FINISHED\n";
        1:  225:}
        -:  226:
        1:  227:void Tests::update_tutorial_from_repository_test() {
        2:  228:    Repository repository;
        1:  228-block  0
    $$$$$:  228-block  1
        3:  229:    Tutorial tutorial_test1 = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:  229-block  0
        1:  229-block  1
        1:  229-block  2
        1:  229-block  3
        1:  229-block  4
    $$$$$:  229-block  5
    $$$$$:  229-block  6
    $$$$$:  229-block  7
    $$$$$:  229-block  8
    $$$$$:  229-block  9
    $$$$$:  229-block 10
    $$$$$:  229-block 11
    $$$$$:  229-block 12
    $$$$$:  229-block 13
        3:  230:    Tutorial tutorial_test2 = {"TEST2", "MARA", std::make_pair(22, 10), 6, "https://www.youtube.com/watch?v=8RVKLcaIAE8"};
        1:  230-block  0
        1:  230-block  1
        1:  230-block  2
        1:  230-block  3
    $$$$$:  230-block  4
    $$$$$:  230-block  5
    $$$$$:  230-block  6
    $$$$$:  230-block  7
    $$$$$:  230-block  8
    $$$$$:  230-block  9
    $$$$$:  230-block 10
    $$$$$:  230-block 11
    $$$$$:  230-block 12
        -:  231:    int success;
        1:  232:    success = repository.admin_add_tutorial_in_repository(tutorial_test1);
       1*:  233:    assert(success == 0);
        1:  233-block  0
    %%%%%:  233-block  1
        1:  233-block  2
    %%%%%:  233-block  3
        1:  234:    success = repository.admin_add_tutorial_in_repository(tutorial_test2);
        1:  234-block  0
       1*:  235:    assert(success == 0);
        1:  235-block  0
    %%%%%:  235-block  1
        1:  235-block  2
    %%%%%:  235-block  3
        1:  236:    success = repository.admin_update_tutorial_in_repository("https://www.youtube.com/watch?v=BSzSn-PRdtI", "UPDATE TITLE", "UPDATE PRESENTER", std::make_pair(1, 1), 99);
        1:  236-block  0
        1:  236-block  1
        1:  236-block  2
        1:  236-block  3
        1:  236-block  4
        1:  236-block  5
    $$$$$:  236-block  6
    $$$$$:  236-block  7
    $$$$$:  236-block  8
    $$$$$:  236-block  9
    $$$$$:  236-block 10
    $$$$$:  236-block 11
    $$$$$:  236-block 12
    $$$$$:  236-block 13
    $$$$$:  236-block 14
    $$$$$:  236-block 15
    $$$$$:  236-block 16
    $$$$$:  236-block 17
    $$$$$:  236-block 18
    $$$$$:  236-block 19
    $$$$$:  236-block 20
       1*:  237:    assert(success == 0);
    %%%%%:  237-block  0
        1:  237-block  1
    %%%%%:  237-block  2
        -:  238:
        2:  239:    Tutorial tutorial0 = repository.get_tutorial_by_position(0);
        1:  239-block  0
    $$$$$:  239-block  1
        -:  240:
       1*:  241:    assert(tutorial0.get_link() == "https://www.youtube.com/watch?v=BSzSn-PRdtI");
        1:  241-block  0
        1:  241-block  1
    %%%%%:  241-block  2
        1:  241-block  3
    %%%%%:  241-block  4
       1*:  242:    assert(tutorial0.get_title() == "UPDATE TITLE");
        1:  242-block  0
        1:  242-block  1
    %%%%%:  242-block  2
        1:  242-block  3
    %%%%%:  242-block  4
       1*:  243:    assert(tutorial0.get_presenter() == "UPDATE PRESENTER");
        1:  243-block  0
        1:  243-block  1
    %%%%%:  243-block  2
        1:  243-block  3
    %%%%%:  243-block  4
       1*:  244:    assert(tutorial0.get_duration() == std::make_pair(1, 1));
        1:  244-block  0
        1:  244-block  1
        1:  244-block  2
    %%%%%:  244-block  3
        1:  244-block  4
    %%%%%:  244-block  5
    $$$$$:  244-block  6
    $$$$$:  244-block  7
    $$$$$:  244-block  8
       1*:  245:    assert(tutorial0.get_number_of_likes() == 99);
        1:  245-block  0
        1:  245-block  1
    %%%%%:  245-block  2
        1:  245-block  3
    %%%%%:  245-block  4
        -:  246:
        2:  247:    Tutorial tutorial1 = repository.get_tutorial_by_position(1);
        1:  247-block  0
        1:  247-block  1
    $$$$$:  247-block  2
        -:  248:
       1*:  249:    assert(tutorial1.get_link() == "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  249-block  0
        1:  249-block  1
    %%%%%:  249-block  2
        1:  249-block  3
    %%%%%:  249-block  4
       1*:  250:    assert(tutorial1.get_title() == "TEST2");
        1:  250-block  0
        1:  250-block  1
    %%%%%:  250-block  2
        1:  250-block  3
    %%%%%:  250-block  4
       1*:  251:    assert(tutorial1.get_presenter() == "MARA");
        1:  251-block  0
        1:  251-block  1
    %%%%%:  251-block  2
        1:  251-block  3
    %%%%%:  251-block  4
       1*:  252:    assert(tutorial1.get_duration() == std::make_pair(22, 10));
        1:  252-block  0
        1:  252-block  1
        1:  252-block  2
    %%%%%:  252-block  3
        1:  252-block  4
    %%%%%:  252-block  5
    $$$$$:  252-block  6
    $$$$$:  252-block  7
    $$$$$:  252-block  8
       1*:  253:    assert(tutorial1.get_number_of_likes() == 6);
        1:  253-block  0
        1:  253-block  1
    %%%%%:  253-block  2
        1:  253-block  3
    %%%%%:  253-block  4
        -:  254:
        1:  255:    success = repository.admin_update_tutorial_in_repository("NOT A LINK", "UPDATE TITLE", "UPDATE PRESENTER", std::make_pair(1, 1), 99);
        1:  255-block  0
        1:  255-block  1
        1:  255-block  2
        1:  255-block  3
        1:  255-block  4
        1:  255-block  5
    $$$$$:  255-block  6
    $$$$$:  255-block  7
    $$$$$:  255-block  8
    $$$$$:  255-block  9
    $$$$$:  255-block 10
    $$$$$:  255-block 11
    $$$$$:  255-block 12
    $$$$$:  255-block 13
    $$$$$:  255-block 14
    $$$$$:  255-block 15
    $$$$$:  255-block 16
    $$$$$:  255-block 17
    $$$$$:  255-block 18
    $$$$$:  255-block 19
    $$$$$:  255-block 20
       1*:  256:    assert(success == 1);
    %%%%%:  256-block  0
        1:  256-block  1
    %%%%%:  256-block  2
        -:  257:
        -:  258:    try {
       1*:  259:        Tutorial tutorial_failed = repository.get_tutorial_by_position(100);
        1:  259-block  0
    %%%%%:  259-block  1
        -:  260:    }
        1:  261:    catch (std::exception Exception){
        1:  261-block  0
        -:  262:        assert(true);
        -:  263:    }
        -:  264:    //std::cout << "REPO UPDATE TESTS FINISHED\n";
        1:  265:}
        -:  266:
        -:  267:
        1:  268:void Tests::all_tutorials_from_repository_test() {
        2:  269:    Repository repository;
        1:  269-block  0
    $$$$$:  269-block  1
        3:  270:    Tutorial tutorial_test1 = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:  270-block  0
        1:  270-block  1
        1:  270-block  2
        1:  270-block  3
        1:  270-block  4
    $$$$$:  270-block  5
    $$$$$:  270-block  6
    $$$$$:  270-block  7
    $$$$$:  270-block  8
    $$$$$:  270-block  9
    $$$$$:  270-block 10
    $$$$$:  270-block 11
    $$$$$:  270-block 12
    $$$$$:  270-block 13
        3:  271:    Tutorial tutorial_test2 = {"TEST2", "MARA", std::make_pair(22, 10), 6, "https://www.youtube.com/watch?v=8RVKLcaIAE8"};
        1:  271-block  0
        1:  271-block  1
        1:  271-block  2
        1:  271-block  3
    $$$$$:  271-block  4
    $$$$$:  271-block  5
    $$$$$:  271-block  6
    $$$$$:  271-block  7
    $$$$$:  271-block  8
    $$$$$:  271-block  9
    $$$$$:  271-block 10
    $$$$$:  271-block 11
    $$$$$:  271-block 12
        -:  272:    int success;
        1:  273:    success = repository.admin_add_tutorial_in_repository(tutorial_test1);
       1*:  274:    assert(success == 0);
        1:  274-block  0
    %%%%%:  274-block  1
        1:  274-block  2
    %%%%%:  274-block  3
        1:  275:    success = repository.admin_add_tutorial_in_repository(tutorial_test2);
        1:  275-block  0
       1*:  276:    assert(success == 0);
        1:  276-block  0
    %%%%%:  276-block  1
        1:  276-block  2
    %%%%%:  276-block  3
        -:  277:
        2:  278:    std::vector <Tutorial> all_tutorials = repository.all_tutorials_from_repository();
        1:  278-block  0
        1:  278-block  1
    $$$$$:  278-block  2
        -:  279:
       1*:  280:    assert(all_tutorials[0].get_title() == "TEST");
        1:  280-block  0
        1:  280-block  1
    %%%%%:  280-block  2
        1:  280-block  3
    %%%%%:  280-block  4
       1*:  281:    assert(all_tutorials[1].get_title() == "TEST2");
        1:  281-block  0
        1:  281-block  1
    %%%%%:  281-block  2
        1:  281-block  3
    %%%%%:  281-block  4
        -:  282:
       1*:  283:    assert(all_tutorials[0].get_presenter() == "ANI");
        1:  283-block  0
        1:  283-block  1
    %%%%%:  283-block  2
        1:  283-block  3
    %%%%%:  283-block  4
       1*:  284:    assert(all_tutorials[1].get_presenter() == "MARA");
        1:  284-block  0
        1:  284-block  1
    %%%%%:  284-block  2
        1:  284-block  3
    %%%%%:  284-block  4
        -:  285:
       1*:  286:    assert(all_tutorials[0].get_duration() == std::make_pair(21, 10));
        1:  286-block  0
        1:  286-block  1
        1:  286-block  2
    %%%%%:  286-block  3
        1:  286-block  4
    %%%%%:  286-block  5
    $$$$$:  286-block  6
    $$$$$:  286-block  7
    $$$$$:  286-block  8
       1*:  287:    assert(all_tutorials[1].get_duration() == std::make_pair(22, 10));
        1:  287-block  0
        1:  287-block  1
        1:  287-block  2
    %%%%%:  287-block  3
        1:  287-block  4
    %%%%%:  287-block  5
    $$$$$:  287-block  6
    $$$$$:  287-block  7
    $$$$$:  287-block  8
        -:  288:
       1*:  289:    assert(all_tutorials[0].get_number_of_likes() == 5);
        1:  289-block  0
        1:  289-block  1
    %%%%%:  289-block  2
        1:  289-block  3
    %%%%%:  289-block  4
       1*:  290:    assert(all_tutorials[1].get_number_of_likes() == 6);
        1:  290-block  0
        1:  290-block  1
    %%%%%:  290-block  2
        1:  290-block  3
    %%%%%:  290-block  4
        -:  291:
       1*:  292:    assert(all_tutorials[0].get_link() == "https://www.youtube.com/watch?v=BSzSn-PRdtI");
        1:  292-block  0
        1:  292-block  1
    %%%%%:  292-block  2
        1:  292-block  3
    %%%%%:  292-block  4
       1*:  293:    assert(all_tutorials[1].get_link() == "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  293-block  0
        1:  293-block  1
    %%%%%:  293-block  2
        1:  293-block  3
    %%%%%:  293-block  4
        -:  294:
        1:  295:}
        -:  296:
        -:  297:
        1:  298:void Tests::admin_increase_likes_in_repository_test() {
        2:  299:    Repository repository;
        1:  299-block  0
    $$$$$:  299-block  1
        3:  300:    Tutorial tutorial_test1 = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:  300-block  0
        1:  300-block  1
        1:  300-block  2
        1:  300-block  3
        1:  300-block  4
    $$$$$:  300-block  5
    $$$$$:  300-block  6
    $$$$$:  300-block  7
    $$$$$:  300-block  8
    $$$$$:  300-block  9
    $$$$$:  300-block 10
    $$$$$:  300-block 11
    $$$$$:  300-block 12
    $$$$$:  300-block 13
        3:  301:    Tutorial tutorial_test2 = {"TEST2", "MARA", std::make_pair(22, 10), 6, "https://www.youtube.com/watch?v=8RVKLcaIAE8"};
        1:  301-block  0
        1:  301-block  1
        1:  301-block  2
        1:  301-block  3
    $$$$$:  301-block  4
    $$$$$:  301-block  5
    $$$$$:  301-block  6
    $$$$$:  301-block  7
    $$$$$:  301-block  8
    $$$$$:  301-block  9
    $$$$$:  301-block 10
    $$$$$:  301-block 11
    $$$$$:  301-block 12
        -:  302:    int success;
        1:  303:    success = repository.admin_add_tutorial_in_repository(tutorial_test1);
       1*:  304:    assert(success == 0);
        1:  304-block  0
    %%%%%:  304-block  1
        1:  304-block  2
    %%%%%:  304-block  3
        1:  305:    success = repository.admin_add_tutorial_in_repository(tutorial_test2);
        1:  305-block  0
       1*:  306:    assert(success == 0);
        1:  306-block  0
    %%%%%:  306-block  1
        1:  306-block  2
    %%%%%:  306-block  3
        1:  307:    success = repository.admin_increase_likes_in_repository("https://www.youtube.com/watch?v=BSzSn-PRdtI");
        1:  307-block  0
        1:  307-block  1
        1:  307-block  2
    $$$$$:  307-block  3
    $$$$$:  307-block  4
    $$$$$:  307-block  5
    $$$$$:  307-block  6
       1*:  308:    assert(success == 0);
    %%%%%:  308-block  0
        1:  308-block  1
    %%%%%:  308-block  2
        2:  309:    std::vector <Tutorial> all_tutorials = repository.all_tutorials_from_repository();
        1:  309-block  0
        1:  309-block  1
    $$$$$:  309-block  2
        -:  310:
       1*:  311:    assert(all_tutorials[0].get_title() == "TEST");
        1:  311-block  0
        1:  311-block  1
    %%%%%:  311-block  2
        1:  311-block  3
    %%%%%:  311-block  4
       1*:  312:    assert(all_tutorials[1].get_title() == "TEST2");
        1:  312-block  0
        1:  312-block  1
    %%%%%:  312-block  2
        1:  312-block  3
    %%%%%:  312-block  4
        -:  313:
       1*:  314:    assert(all_tutorials[0].get_presenter() == "ANI");
        1:  314-block  0
        1:  314-block  1
    %%%%%:  314-block  2
        1:  314-block  3
    %%%%%:  314-block  4
       1*:  315:    assert(all_tutorials[1].get_presenter() == "MARA");
        1:  315-block  0
        1:  315-block  1
    %%%%%:  315-block  2
        1:  315-block  3
    %%%%%:  315-block  4
        -:  316:
       1*:  317:    assert(all_tutorials[0].get_duration() == std::make_pair(21, 10));
        1:  317-block  0
        1:  317-block  1
        1:  317-block  2
    %%%%%:  317-block  3
        1:  317-block  4
    %%%%%:  317-block  5
    $$$$$:  317-block  6
    $$$$$:  317-block  7
    $$$$$:  317-block  8
       1*:  318:    assert(all_tutorials[1].get_duration() == std::make_pair(22, 10));
        1:  318-block  0
        1:  318-block  1
        1:  318-block  2
    %%%%%:  318-block  3
        1:  318-block  4
    %%%%%:  318-block  5
    $$$$$:  318-block  6
    $$$$$:  318-block  7
    $$$$$:  318-block  8
        -:  319:
       1*:  320:    assert(all_tutorials[0].get_number_of_likes() == 6);
        1:  320-block  0
        1:  320-block  1
    %%%%%:  320-block  2
        1:  320-block  3
    %%%%%:  320-block  4
       1*:  321:    assert(all_tutorials[1].get_number_of_likes() == 6);
        1:  321-block  0
        1:  321-block  1
    %%%%%:  321-block  2
        1:  321-block  3
    %%%%%:  321-block  4
        -:  322:
       1*:  323:    assert(all_tutorials[0].get_link() == "https://www.youtube.com/watch?v=BSzSn-PRdtI");
        1:  323-block  0
        1:  323-block  1
    %%%%%:  323-block  2
        1:  323-block  3
    %%%%%:  323-block  4
       1*:  324:    assert(all_tutorials[1].get_link() == "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  324-block  0
        1:  324-block  1
    %%%%%:  324-block  2
        1:  324-block  3
    %%%%%:  324-block  4
        -:  325:
        1:  326:    success = repository.admin_increase_likes_in_repository("not a valid link!");
        1:  326-block  0
        1:  326-block  1
        1:  326-block  2
    $$$$$:  326-block  3
    $$$$$:  326-block  4
    $$$$$:  326-block  5
    $$$$$:  326-block  6
       1*:  327:    assert(success == 1);
    %%%%%:  327-block  0
        1:  327-block  1
    %%%%%:  327-block  2
        -:  328:
        1:  329:}
        -:  330:
        1:  331:void Tests::create_watchlist_repository_test() {
        2:  332:    WatchListRepository repository;
        1:  332-block  0
        1:  332-block  1
    $$$$$:  332-block  2
       1*:  333:    assert(repository.size_tutorials_list() == 0);
        1:  333-block  0
        1:  333-block  1
    %%%%%:  333-block  2
        1:  333-block  3
    %%%%%:  333-block  4
        1:  334:}
        -:  335:
        1:  336:void Tests::add_tutorial_in_watchlist_test() {
        2:  337:    WatchListRepository repository;
        1:  337-block  0
    $$$$$:  337-block  1
       1*:  338:    assert(repository.size_tutorials_list() == 0);
        1:  338-block  0
        1:  338-block  1
    %%%%%:  338-block  2
        1:  338-block  3
    %%%%%:  338-block  4
        3:  339:    Tutorial tutorial_test = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:  339-block  0
        1:  339-block  1
        1:  339-block  2
        1:  339-block  3
        1:  339-block  4
        1:  339-block  5
    $$$$$:  339-block  6
    $$$$$:  339-block  7
    $$$$$:  339-block  8
    $$$$$:  339-block  9
    $$$$$:  339-block 10
    $$$$$:  339-block 11
    $$$$$:  339-block 12
    $$$$$:  339-block 13
    $$$$$:  339-block 14
        -:  340:
        1:  341:    int success = repository.user_add_tutorial_in_repository(tutorial_test);
       1*:  342:    assert(repository.size_tutorials_list() == 1);
        1:  342-block  0
        1:  342-block  1
    %%%%%:  342-block  2
        1:  342-block  3
    %%%%%:  342-block  4
       1*:  343:    assert(success == 0);
        1:  343-block  0
    %%%%%:  343-block  1
        1:  343-block  2
    %%%%%:  343-block  3
        -:  344:
        1:  345:    int not_success = repository.user_add_tutorial_in_repository(tutorial_test);
        1:  345-block  0
       1*:  346:    assert(repository.size_tutorials_list() == 1);
        1:  346-block  0
        1:  346-block  1
    %%%%%:  346-block  2
        1:  346-block  3
    %%%%%:  346-block  4
       1*:  347:    assert(not_success == 1);
        1:  347-block  0
    %%%%%:  347-block  1
        1:  347-block  2
    %%%%%:  347-block  3
        1:  348:}
        -:  349:
        1:  350:void Tests::remove_tutorial_from_watchlist_test() {
        2:  351:    WatchListRepository repository;
        1:  351-block  0
    $$$$$:  351-block  1
        3:  352:    Tutorial tutorial_test1 = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:  352-block  0
        1:  352-block  1
        1:  352-block  2
        1:  352-block  3
        1:  352-block  4
    $$$$$:  352-block  5
    $$$$$:  352-block  6
    $$$$$:  352-block  7
    $$$$$:  352-block  8
    $$$$$:  352-block  9
    $$$$$:  352-block 10
    $$$$$:  352-block 11
    $$$$$:  352-block 12
    $$$$$:  352-block 13
        3:  353:    Tutorial tutorial_test2 = {"TEST2", "MARA", std::make_pair(22, 10), 6, "https://www.youtube.com/watch?v=8RVKLcaIAE8"};
        1:  353-block  0
        1:  353-block  1
        1:  353-block  2
        1:  353-block  3
        1:  353-block  4
    $$$$$:  353-block  5
    $$$$$:  353-block  6
    $$$$$:  353-block  7
    $$$$$:  353-block  8
    $$$$$:  353-block  9
    $$$$$:  353-block 10
    $$$$$:  353-block 11
    $$$$$:  353-block 12
    $$$$$:  353-block 13
        -:  354:
        -:  355:    int success;
        1:  356:    success = repository.user_add_tutorial_in_repository(tutorial_test1);
       1*:  357:    assert(success == 0);
        1:  357-block  0
    %%%%%:  357-block  1
        1:  357-block  2
    %%%%%:  357-block  3
        1:  358:    success = repository.user_add_tutorial_in_repository(tutorial_test2);
        1:  358-block  0
       1*:  359:    assert(success == 0);
        1:  359-block  0
    %%%%%:  359-block  1
        1:  359-block  2
    %%%%%:  359-block  3
        -:  360:
        1:  361:    success = repository.user_remove_tutorial_in_repository("https://www.youtube.com/watch?v=BSzSn-PRdtI");
        1:  361-block  0
        1:  361-block  1
        1:  361-block  2
    $$$$$:  361-block  3
    $$$$$:  361-block  4
    $$$$$:  361-block  5
    $$$$$:  361-block  6
       1*:  362:    assert(success == 0);
    %%%%%:  362-block  0
        1:  362-block  1
    %%%%%:  362-block  2
        -:  363:
       1*:  364:    assert(repository.size_tutorials_list() == 1);
        1:  364-block  0
        1:  364-block  1
    %%%%%:  364-block  2
        1:  364-block  3
    %%%%%:  364-block  4
        -:  365:
        1:  366:    success = repository.user_remove_tutorial_in_repository("not a link");
        1:  366-block  0
        1:  366-block  1
        1:  366-block  2
    $$$$$:  366-block  3
    $$$$$:  366-block  4
    $$$$$:  366-block  5
    $$$$$:  366-block  6
       1*:  367:    assert(success == 1);
    %%%%%:  367-block  0
        1:  367-block  1
    %%%%%:  367-block  2
        1:  368:}
        -:  369:
        1:  370:void Tests::all_tutorials_from_watchlist_test() {
        2:  371:    WatchListRepository repository;
        1:  371-block  0
    $$$$$:  371-block  1
        3:  372:    Tutorial tutorial_test1 = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:  372-block  0
        1:  372-block  1
        1:  372-block  2
        1:  372-block  3
        1:  372-block  4
    $$$$$:  372-block  5
    $$$$$:  372-block  6
    $$$$$:  372-block  7
    $$$$$:  372-block  8
    $$$$$:  372-block  9
    $$$$$:  372-block 10
    $$$$$:  372-block 11
    $$$$$:  372-block 12
    $$$$$:  372-block 13
        3:  373:    Tutorial tutorial_test2 = {"TEST2", "MARA", std::make_pair(22, 10), 6, "https://www.youtube.com/watch?v=8RVKLcaIAE8"};
        1:  373-block  0
        1:  373-block  1
        1:  373-block  2
        1:  373-block  3
    $$$$$:  373-block  4
    $$$$$:  373-block  5
    $$$$$:  373-block  6
    $$$$$:  373-block  7
    $$$$$:  373-block  8
    $$$$$:  373-block  9
    $$$$$:  373-block 10
    $$$$$:  373-block 11
    $$$$$:  373-block 12
        -:  374:    int success;
        1:  375:    success = repository.user_add_tutorial_in_repository(tutorial_test1);
       1*:  376:    assert(success == 0);
        1:  376-block  0
    %%%%%:  376-block  1
        1:  376-block  2
    %%%%%:  376-block  3
        1:  377:    success = repository.user_add_tutorial_in_repository(tutorial_test2);
        1:  377-block  0
       1*:  378:    assert(success == 0);
        1:  378-block  0
    %%%%%:  378-block  1
        1:  378-block  2
    %%%%%:  378-block  3
        -:  379:
        2:  380:    std::vector <Tutorial> all_tutorials = repository.all_tutorials_from_repository();
        1:  380-block  0
        1:  380-block  1
    $$$$$:  380-block  2
        -:  381:
       1*:  382:    assert(all_tutorials[0].get_title() == "TEST");
        1:  382-block  0
        1:  382-block  1
    %%%%%:  382-block  2
        1:  382-block  3
    %%%%%:  382-block  4
       1*:  383:    assert(all_tutorials[1].get_title() == "TEST2");
        1:  383-block  0
        1:  383-block  1
    %%%%%:  383-block  2
        1:  383-block  3
    %%%%%:  383-block  4
        -:  384:
       1*:  385:    assert(all_tutorials[0].get_presenter() == "ANI");
        1:  385-block  0
        1:  385-block  1
    %%%%%:  385-block  2
        1:  385-block  3
    %%%%%:  385-block  4
       1*:  386:    assert(all_tutorials[1].get_presenter() == "MARA");
        1:  386-block  0
        1:  386-block  1
    %%%%%:  386-block  2
        1:  386-block  3
    %%%%%:  386-block  4
        -:  387:
       1*:  388:    assert(all_tutorials[0].get_duration() == std::make_pair(21, 10));
        1:  388-block  0
        1:  388-block  1
        1:  388-block  2
    %%%%%:  388-block  3
        1:  388-block  4
    %%%%%:  388-block  5
    $$$$$:  388-block  6
    $$$$$:  388-block  7
    $$$$$:  388-block  8
       1*:  389:    assert(all_tutorials[1].get_duration() == std::make_pair(22, 10));
        1:  389-block  0
        1:  389-block  1
        1:  389-block  2
    %%%%%:  389-block  3
        1:  389-block  4
    %%%%%:  389-block  5
    $$$$$:  389-block  6
    $$$$$:  389-block  7
    $$$$$:  389-block  8
        -:  390:
       1*:  391:    assert(all_tutorials[0].get_number_of_likes() == 5);
        1:  391-block  0
        1:  391-block  1
    %%%%%:  391-block  2
        1:  391-block  3
    %%%%%:  391-block  4
       1*:  392:    assert(all_tutorials[1].get_number_of_likes() == 6);
        1:  392-block  0
        1:  392-block  1
    %%%%%:  392-block  2
        1:  392-block  3
    %%%%%:  392-block  4
        -:  393:
       1*:  394:    assert(all_tutorials[0].get_link() == "https://www.youtube.com/watch?v=BSzSn-PRdtI");
        1:  394-block  0
        1:  394-block  1
    %%%%%:  394-block  2
        1:  394-block  3
    %%%%%:  394-block  4
       1*:  395:    assert(all_tutorials[1].get_link() == "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  395-block  0
        1:  395-block  1
    %%%%%:  395-block  2
        1:  395-block  3
    %%%%%:  395-block  4
        -:  396:
        1:  397:}
        -:  398:
        1:  399:void Tests::get_tutorial_by_position_test() {
        2:  400:    WatchListRepository repository;
        1:  400-block  0
    $$$$$:  400-block  1
        3:  401:    Tutorial tutorial_test1 = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:  401-block  0
        1:  401-block  1
        1:  401-block  2
        1:  401-block  3
        1:  401-block  4
    $$$$$:  401-block  5
    $$$$$:  401-block  6
    $$$$$:  401-block  7
    $$$$$:  401-block  8
    $$$$$:  401-block  9
    $$$$$:  401-block 10
    $$$$$:  401-block 11
    $$$$$:  401-block 12
    $$$$$:  401-block 13
        3:  402:    Tutorial tutorial_test2 = {"TEST2", "MARA", std::make_pair(22, 10), 6, "https://www.youtube.com/watch?v=8RVKLcaIAE8"};
        1:  402-block  0
        1:  402-block  1
        1:  402-block  2
        1:  402-block  3
    $$$$$:  402-block  4
    $$$$$:  402-block  5
    $$$$$:  402-block  6
    $$$$$:  402-block  7
    $$$$$:  402-block  8
    $$$$$:  402-block  9
    $$$$$:  402-block 10
    $$$$$:  402-block 11
    $$$$$:  402-block 12
        -:  403:    int success;
        1:  404:    success = repository.user_add_tutorial_in_repository(tutorial_test1);
       1*:  405:    assert(success == 0);
        1:  405-block  0
    %%%%%:  405-block  1
        1:  405-block  2
    %%%%%:  405-block  3
        1:  406:    success = repository.user_add_tutorial_in_repository(tutorial_test2);
        1:  406-block  0
       1*:  407:    assert(success == 0);
        1:  407-block  0
    %%%%%:  407-block  1
        1:  407-block  2
    %%%%%:  407-block  3
        -:  408:
        2:  409:    Tutorial tutorial_found = repository.get_tutorial_by_position(0);
        1:  409-block  0
        1:  409-block  1
    $$$$$:  409-block  2
        -:  410:
       1*:  411:    assert(tutorial_found.get_title() == "TEST");
        1:  411-block  0
        1:  411-block  1
    %%%%%:  411-block  2
        1:  411-block  3
    %%%%%:  411-block  4
        -:  412:
       1*:  413:    assert(tutorial_found.get_presenter() == "ANI");
        1:  413-block  0
        1:  413-block  1
    %%%%%:  413-block  2
        1:  413-block  3
    %%%%%:  413-block  4
        -:  414:
       1*:  415:    assert(tutorial_found.get_duration() == std::make_pair(21, 10));
        1:  415-block  0
        1:  415-block  1
        1:  415-block  2
    %%%%%:  415-block  3
        1:  415-block  4
    %%%%%:  415-block  5
    $$$$$:  415-block  6
    $$$$$:  415-block  7
    $$$$$:  415-block  8
        -:  416:
       1*:  417:    assert(tutorial_found.get_number_of_likes() == 5);
        1:  417-block  0
        1:  417-block  1
    %%%%%:  417-block  2
        1:  417-block  3
    %%%%%:  417-block  4
        -:  418:
       1*:  419:    assert(tutorial_found.get_link() == "https://www.youtube.com/watch?v=BSzSn-PRdtI");
        1:  419-block  0
        1:  419-block  1
    %%%%%:  419-block  2
        1:  419-block  3
    %%%%%:  419-block  4
        -:  420:
        -:  421:    try {
       1*:  422:        Tutorial tutorial_failed = repository.get_tutorial_by_position(100);
        1:  422-block  0
    %%%%%:  422-block  1
        -:  423:    }
        1:  424:    catch (std::exception Exception){
        1:  424-block  0
        -:  425:        assert(true);
        -:  426:    }
        -:  427:
        1:  428:}
        -:  429:// ------ Admin Service Tests ------------------------------------------------------------------------------------------
        1:  430:void Tests::run_admin_service_tests() {
        -:  431:
        1:  432:    run_admin_service_test();
        1:  432-block  0
        1:  433:    run_user_service_test();
        1:  434:}
        -:  435:
        1:  436:void Tests::run_admin_service_test() {
        1:  437:    add_tutorial_admin_service_test();
        1:  437-block  0
        1:  438:    remove_tutorial_admin_service_test();
        1:  439:    update_tutorial_admin_service_test();
        1:  440:    all_tutorials_service_test();
        1:  441:    tutorials_by_presenter_service_test();
        1:  442:    increase_likes_service_test();
        1:  443:}
        -:  444:
        1:  445:void Tests::run_user_service_test() {
        1:  446:    add_tutorial_user_service_test();
        1:  446-block  0
        1:  447:    remove_tutorial_user_service_test();
        1:  448:    all_tutorials_user_service_test();
        1:  449:}
        -:  450:
        1:  451:void Tests::add_tutorial_admin_service_test() {
        2:  452:    Repository repository;
        1:  452-block  0
    $$$$$:  452-block  1
        2:  453:    AdminService admin_service = {repository};
        1:  453-block  0
        1:  453-block  1
    $$$$$:  453-block  2
        1:  454:    int success = admin_service.add_tutorial_admin_service("Hold on","Rusko", std::make_pair(3, 58), 41876, "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  454-block  0
        1:  454-block  1
        1:  454-block  2
        1:  454-block  3
        1:  454-block  4
        1:  454-block  5
    $$$$$:  454-block  6
    $$$$$:  454-block  7
    $$$$$:  454-block  8
    $$$$$:  454-block  9
    $$$$$:  454-block 10
    $$$$$:  454-block 11
    $$$$$:  454-block 12
    $$$$$:  454-block 13
    $$$$$:  454-block 14
    $$$$$:  454-block 15
    $$$$$:  454-block 16
    $$$$$:  454-block 17
    $$$$$:  454-block 18
    $$$$$:  454-block 19
    $$$$$:  454-block 20
       1*:  455:    assert(success == 0);
    %%%%%:  455-block  0
        1:  455-block  1
    %%%%%:  455-block  2
        -:  456:
        1:  457:    success = admin_service.add_tutorial_admin_service("NOT Hold on","Rusko", std::make_pair(3, 58), 41876, "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  457-block  0
        1:  457-block  1
        1:  457-block  2
        1:  457-block  3
        1:  457-block  4
        1:  457-block  5
    $$$$$:  457-block  6
    $$$$$:  457-block  7
    $$$$$:  457-block  8
    $$$$$:  457-block  9
    $$$$$:  457-block 10
    $$$$$:  457-block 11
    $$$$$:  457-block 12
    $$$$$:  457-block 13
    $$$$$:  457-block 14
    $$$$$:  457-block 15
    $$$$$:  457-block 16
    $$$$$:  457-block 17
    $$$$$:  457-block 18
    $$$$$:  457-block 19
    $$$$$:  457-block 20
       1*:  458:    assert(success == 1);
    %%%%%:  458-block  0
        1:  458-block  1
    %%%%%:  458-block  2
        -:  459:
        -:  460:    //std::cout << "SERVICE ADD TESTS FINISHED\n";
        1:  461:}
        -:  462:
        1:  463:void Tests::remove_tutorial_admin_service_test() {
        2:  464:    Repository repository;
        1:  464-block  0
    $$$$$:  464-block  1
        2:  465:    AdminService admin_service = {repository};
        1:  465-block  0
    $$$$$:  465-block  1
        -:  466:    int success;
        -:  467:
        1:  468:    admin_service.add_tutorial_admin_service("Hold on","Rusko", std::make_pair(3, 58), 41876, "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  468-block  0
        1:  468-block  1
        1:  468-block  2
        1:  468-block  3
        1:  468-block  4
        1:  468-block  5
    $$$$$:  468-block  6
    $$$$$:  468-block  7
    $$$$$:  468-block  8
    $$$$$:  468-block  9
    $$$$$:  468-block 10
    $$$$$:  468-block 11
    $$$$$:  468-block 12
    $$$$$:  468-block 13
    $$$$$:  468-block 14
    $$$$$:  468-block 15
    $$$$$:  468-block 16
    $$$$$:  468-block 17
    $$$$$:  468-block 18
    $$$$$:  468-block 19
    $$$$$:  468-block 20
        1:  469:    admin_service.add_tutorial_admin_service("Waiting all night","Rudimental", std::make_pair(5, 15), 980762, "https://www.youtube.com/watch?v=M97vR2V4vTs");
        1:  469-block  0
        1:  469-block  1
        1:  469-block  2
        1:  469-block  3
        1:  469-block  4
    $$$$$:  469-block  5
    $$$$$:  469-block  6
    $$$$$:  469-block  7
    $$$$$:  469-block  8
    $$$$$:  469-block  9
    $$$$$:  469-block 10
    $$$$$:  469-block 11
    $$$$$:  469-block 12
    $$$$$:  469-block 13
    $$$$$:  469-block 14
    $$$$$:  469-block 15
    $$$$$:  469-block 16
    $$$$$:  469-block 17
    $$$$$:  469-block 18
    $$$$$:  469-block 19
        -:  470:
        1:  471:    success = admin_service.remove_tutorial_admin_service("https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  471-block  0
        1:  471-block  1
    $$$$$:  471-block  2
    $$$$$:  471-block  3
    $$$$$:  471-block  4
    $$$$$:  471-block  5
       1*:  472:    assert(success == 0);
    %%%%%:  472-block  0
        1:  472-block  1
    %%%%%:  472-block  2
        -:  473:
        1:  474:    success = admin_service.remove_tutorial_admin_service("https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  474-block  0
        1:  474-block  1
        1:  474-block  2
    $$$$$:  474-block  3
    $$$$$:  474-block  4
    $$$$$:  474-block  5
    $$$$$:  474-block  6
       1*:  475:    assert(success == 1);
    %%%%%:  475-block  0
        1:  475-block  1
    %%%%%:  475-block  2
        -:  476:
        2:  477:    Tutorial tutorial1 = admin_service.get_tutorial_by_position_admin_service(0);
        1:  477-block  0
        1:  477-block  1
    $$$$$:  477-block  2
        -:  478:
       1*:  479:    assert(tutorial1.get_title() == "Waiting all night");
        1:  479-block  0
        1:  479-block  1
    %%%%%:  479-block  2
        1:  479-block  3
    %%%%%:  479-block  4
       1*:  480:    assert(tutorial1.get_presenter() == "Rudimental");
        1:  480-block  0
        1:  480-block  1
    %%%%%:  480-block  2
        1:  480-block  3
    %%%%%:  480-block  4
       1*:  481:    assert(tutorial1.get_duration() == std::make_pair(5, 15));
        1:  481-block  0
        1:  481-block  1
        1:  481-block  2
    %%%%%:  481-block  3
        1:  481-block  4
    %%%%%:  481-block  5
    $$$$$:  481-block  6
    $$$$$:  481-block  7
    $$$$$:  481-block  8
       1*:  482:    assert(tutorial1.get_number_of_likes() == 980762);
        1:  482-block  0
        1:  482-block  1
    %%%%%:  482-block  2
        1:  482-block  3
    %%%%%:  482-block  4
       1*:  483:    assert(tutorial1.get_link() == "https://www.youtube.com/watch?v=M97vR2V4vTs");
        1:  483-block  0
        1:  483-block  1
    %%%%%:  483-block  2
        1:  483-block  3
    %%%%%:  483-block  4
        -:  484:    //std::cout << "SERVICE REMOVE TESTS FINISHED\n";
        1:  485:}
        -:  486:
        1:  487:void Tests::update_tutorial_admin_service_test() {
        2:  488:    Repository repository;
        1:  488-block  0
    $$$$$:  488-block  1
        2:  489:    AdminService admin_service = {repository};
        1:  489-block  0
    $$$$$:  489-block  1
        -:  490:    int success;
        -:  491:
        1:  492:    admin_service.add_tutorial_admin_service("Waiting all night","Rudimental", std::make_pair(5, 15), 980762, "https://www.youtube.com/watch?v=M97vR2V4vTs");
        1:  492-block  0
        1:  492-block  1
        1:  492-block  2
        1:  492-block  3
        1:  492-block  4
        1:  492-block  5
    $$$$$:  492-block  6
    $$$$$:  492-block  7
    $$$$$:  492-block  8
    $$$$$:  492-block  9
    $$$$$:  492-block 10
    $$$$$:  492-block 11
    $$$$$:  492-block 12
    $$$$$:  492-block 13
    $$$$$:  492-block 14
    $$$$$:  492-block 15
    $$$$$:  492-block 16
    $$$$$:  492-block 17
    $$$$$:  492-block 18
    $$$$$:  492-block 19
    $$$$$:  492-block 20
        1:  493:    success = admin_service.update_tutorial_admin_service("https://www.youtube.com/watch?v=M97vR2V4vTs", "Updated title", "Updated presenter", std::make_pair(22, 22), 8);
        1:  493-block  0
        1:  493-block  1
        1:  493-block  2
        1:  493-block  3
        1:  493-block  4
    $$$$$:  493-block  5
    $$$$$:  493-block  6
    $$$$$:  493-block  7
    $$$$$:  493-block  8
    $$$$$:  493-block  9
    $$$$$:  493-block 10
    $$$$$:  493-block 11
    $$$$$:  493-block 12
    $$$$$:  493-block 13
    $$$$$:  493-block 14
    $$$$$:  493-block 15
    $$$$$:  493-block 16
    $$$$$:  493-block 17
    $$$$$:  493-block 18
    $$$$$:  493-block 19
       1*:  494:    assert(success == 0);
    %%%%%:  494-block  0
        1:  494-block  1
    %%%%%:  494-block  2
        -:  495:
        2:  496:    Tutorial tutorial1 = admin_service.get_tutorial_by_position_admin_service(0);
        1:  496-block  0
        1:  496-block  1
    $$$$$:  496-block  2
        -:  497:
       1*:  498:    assert(tutorial1.get_title() == "Updated title");
        1:  498-block  0
        1:  498-block  1
    %%%%%:  498-block  2
        1:  498-block  3
    %%%%%:  498-block  4
       1*:  499:    assert(tutorial1.get_presenter() == "Updated presenter");
        1:  499-block  0
        1:  499-block  1
    %%%%%:  499-block  2
        1:  499-block  3
    %%%%%:  499-block  4
       1*:  500:    assert(tutorial1.get_duration() == std::make_pair(22, 22));
        1:  500-block  0
        1:  500-block  1
        1:  500-block  2
    %%%%%:  500-block  3
        1:  500-block  4
    %%%%%:  500-block  5
    $$$$$:  500-block  6
    $$$$$:  500-block  7
    $$$$$:  500-block  8
       1*:  501:    assert(tutorial1.get_number_of_likes() == 8);
        1:  501-block  0
        1:  501-block  1
    %%%%%:  501-block  2
        1:  501-block  3
    %%%%%:  501-block  4
       1*:  502:    assert(tutorial1.get_link() == "https://www.youtube.com/watch?v=M97vR2V4vTs");
        1:  502-block  0
        1:  502-block  1
    %%%%%:  502-block  2
        1:  502-block  3
    %%%%%:  502-block  4
        -:  503:    //std::cout << "SERVICE UPDATE TESTS FINISHED\n";
        1:  504:}
        -:  505:
        1:  506:void Tests::all_tutorials_service_test() {
        2:  507:    Repository repository;
        1:  507-block  0
    $$$$$:  507-block  1
        2:  508:    AdminService admin_service = {repository};
        1:  508-block  0
    $$$$$:  508-block  1
        -:  509:
        1:  510:    admin_service.add_tutorial_admin_service("Hold on","Rusko", std::make_pair(3, 58), 41876, "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  510-block  0
        1:  510-block  1
        1:  510-block  2
        1:  510-block  3
        1:  510-block  4
        1:  510-block  5
    $$$$$:  510-block  6
    $$$$$:  510-block  7
    $$$$$:  510-block  8
    $$$$$:  510-block  9
    $$$$$:  510-block 10
    $$$$$:  510-block 11
    $$$$$:  510-block 12
    $$$$$:  510-block 13
    $$$$$:  510-block 14
    $$$$$:  510-block 15
    $$$$$:  510-block 16
    $$$$$:  510-block 17
    $$$$$:  510-block 18
    $$$$$:  510-block 19
    $$$$$:  510-block 20
        1:  511:    admin_service.add_tutorial_admin_service("Waiting all night","Rudimental", std::make_pair(5, 15), 980762, "https://www.youtube.com/watch?v=M97vR2V4vTs");
        1:  511-block  0
        1:  511-block  1
        1:  511-block  2
        1:  511-block  3
        1:  511-block  4
    $$$$$:  511-block  5
    $$$$$:  511-block  6
    $$$$$:  511-block  7
    $$$$$:  511-block  8
    $$$$$:  511-block  9
    $$$$$:  511-block 10
    $$$$$:  511-block 11
    $$$$$:  511-block 12
    $$$$$:  511-block 13
    $$$$$:  511-block 14
    $$$$$:  511-block 15
    $$$$$:  511-block 16
    $$$$$:  511-block 17
    $$$$$:  511-block 18
    $$$$$:  511-block 19
        -:  512:
        2:  513:    std::vector<Tutorial> all_tutorials = admin_service.all_tutorials_service();
        1:  513-block  0
    $$$$$:  513-block  1
        -:  514:
       1*:  515:    assert(admin_service.size_repo() == 2);
        1:  515-block  0
        1:  515-block  1
    %%%%%:  515-block  2
        1:  515-block  3
    %%%%%:  515-block  4
        -:  516:
       1*:  517:    assert(all_tutorials[0].get_title() == "Hold on");
        1:  517-block  0
        1:  517-block  1
    %%%%%:  517-block  2
        1:  517-block  3
    %%%%%:  517-block  4
       1*:  518:    assert(all_tutorials[1].get_title() == "Waiting all night");
        1:  518-block  0
        1:  518-block  1
    %%%%%:  518-block  2
        1:  518-block  3
    %%%%%:  518-block  4
        -:  519:
       1*:  520:    assert(all_tutorials[0].get_presenter() == "Rusko");
        1:  520-block  0
        1:  520-block  1
    %%%%%:  520-block  2
        1:  520-block  3
    %%%%%:  520-block  4
       1*:  521:    assert(all_tutorials[1].get_presenter() == "Rudimental");
        1:  521-block  0
        1:  521-block  1
    %%%%%:  521-block  2
        1:  521-block  3
    %%%%%:  521-block  4
        -:  522:
       1*:  523:    assert(all_tutorials[0].get_duration() == std::make_pair(3, 58));
        1:  523-block  0
        1:  523-block  1
        1:  523-block  2
    %%%%%:  523-block  3
        1:  523-block  4
    %%%%%:  523-block  5
    $$$$$:  523-block  6
    $$$$$:  523-block  7
    $$$$$:  523-block  8
       1*:  524:    assert(all_tutorials[1].get_duration() == std::make_pair(5, 15));
        1:  524-block  0
        1:  524-block  1
        1:  524-block  2
    %%%%%:  524-block  3
        1:  524-block  4
    %%%%%:  524-block  5
    $$$$$:  524-block  6
    $$$$$:  524-block  7
    $$$$$:  524-block  8
        -:  525:
       1*:  526:    assert(all_tutorials[0].get_number_of_likes() == 41876);
        1:  526-block  0
        1:  526-block  1
    %%%%%:  526-block  2
        1:  526-block  3
    %%%%%:  526-block  4
       1*:  527:    assert(all_tutorials[1].get_number_of_likes() == 980762);
        1:  527-block  0
        1:  527-block  1
    %%%%%:  527-block  2
        1:  527-block  3
    %%%%%:  527-block  4
        -:  528:
       1*:  529:    assert(all_tutorials[0].get_link() == "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  529-block  0
        1:  529-block  1
    %%%%%:  529-block  2
        1:  529-block  3
    %%%%%:  529-block  4
       1*:  530:    assert(all_tutorials[1].get_link() == "https://www.youtube.com/watch?v=M97vR2V4vTs");
        1:  530-block  0
        1:  530-block  1
    %%%%%:  530-block  2
        1:  530-block  3
    %%%%%:  530-block  4
        1:  531:}
        -:  532:
        1:  533:void Tests::tutorials_by_presenter_service_test() {
        2:  534:    Repository repository;
        1:  534-block  0
    $$$$$:  534-block  1
        2:  535:    AdminService admin_service = {repository};
        1:  535-block  0
    $$$$$:  535-block  1
        -:  536:
        1:  537:    admin_service.add_tutorial_admin_service("Hold on","Rusko", std::make_pair(3, 58), 41876, "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  537-block  0
        1:  537-block  1
        1:  537-block  2
        1:  537-block  3
        1:  537-block  4
        1:  537-block  5
    $$$$$:  537-block  6
    $$$$$:  537-block  7
    $$$$$:  537-block  8
    $$$$$:  537-block  9
    $$$$$:  537-block 10
    $$$$$:  537-block 11
    $$$$$:  537-block 12
    $$$$$:  537-block 13
    $$$$$:  537-block 14
    $$$$$:  537-block 15
    $$$$$:  537-block 16
    $$$$$:  537-block 17
    $$$$$:  537-block 18
    $$$$$:  537-block 19
    $$$$$:  537-block 20
        1:  538:    admin_service.add_tutorial_admin_service("Waiting all night","Rudimental", std::make_pair(5, 15), 980762, "https://www.youtube.com/watch?v=M97vR2V4vTs");
        1:  538-block  0
        1:  538-block  1
        1:  538-block  2
        1:  538-block  3
        1:  538-block  4
    $$$$$:  538-block  5
    $$$$$:  538-block  6
    $$$$$:  538-block  7
    $$$$$:  538-block  8
    $$$$$:  538-block  9
    $$$$$:  538-block 10
    $$$$$:  538-block 11
    $$$$$:  538-block 12
    $$$$$:  538-block 13
    $$$$$:  538-block 14
    $$$$$:  538-block 15
    $$$$$:  538-block 16
    $$$$$:  538-block 17
    $$$$$:  538-block 18
    $$$$$:  538-block 19
        -:  539:
        3:  540:    std::vector<Tutorial> tutorials_filtered = admin_service.tutorials_by_presenter_service("sk");
        1:  540-block  0
    $$$$$:  540-block  1
    $$$$$:  540-block  2
    $$$$$:  540-block  3
        -:  541:
       1*:  542:    assert(tutorials_filtered.size() == 1);
    %%%%%:  542-block  0
        1:  542-block  1
    %%%%%:  542-block  2
        -:  543:
       1*:  544:    assert(tutorials_filtered[0].get_title() == "Hold on");
        1:  544-block  0
        1:  544-block  1
    %%%%%:  544-block  2
        1:  544-block  3
    %%%%%:  544-block  4
       1*:  545:    assert(tutorials_filtered[0].get_presenter() == "Rusko");
        1:  545-block  0
        1:  545-block  1
    %%%%%:  545-block  2
        1:  545-block  3
    %%%%%:  545-block  4
       1*:  546:    assert(tutorials_filtered[0].get_duration() == std::make_pair(3, 58));
        1:  546-block  0
        1:  546-block  1
        1:  546-block  2
    %%%%%:  546-block  3
        1:  546-block  4
    %%%%%:  546-block  5
    $$$$$:  546-block  6
    $$$$$:  546-block  7
    $$$$$:  546-block  8
       1*:  547:    assert(tutorials_filtered[0].get_number_of_likes() == 41876);
        1:  547-block  0
        1:  547-block  1
    %%%%%:  547-block  2
        1:  547-block  3
    %%%%%:  547-block  4
       1*:  548:    assert(tutorials_filtered[0].get_link() == "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  548-block  0
        1:  548-block  1
    %%%%%:  548-block  2
        1:  548-block  3
    %%%%%:  548-block  4
        -:  549:
        -:  550:
        3:  551:    std::vector<Tutorial> all_tutorials = admin_service.tutorials_by_presenter_service("");
        1:  551-block  0
        1:  551-block  1
        1:  551-block  2
    $$$$$:  551-block  3
    $$$$$:  551-block  4
    $$$$$:  551-block  5
        -:  552:
       1*:  553:    assert(admin_service.size_repo() == 2);
        1:  553-block  0
    %%%%%:  553-block  1
        1:  553-block  2
    %%%%%:  553-block  3
        -:  554:
       1*:  555:    assert(all_tutorials[0].get_title() == "Hold on");
        1:  555-block  0
        1:  555-block  1
    %%%%%:  555-block  2
        1:  555-block  3
    %%%%%:  555-block  4
       1*:  556:    assert(all_tutorials[1].get_title() == "Waiting all night");
        1:  556-block  0
        1:  556-block  1
    %%%%%:  556-block  2
        1:  556-block  3
    %%%%%:  556-block  4
        -:  557:
       1*:  558:    assert(all_tutorials[0].get_presenter() == "Rusko");
        1:  558-block  0
        1:  558-block  1
    %%%%%:  558-block  2
        1:  558-block  3
    %%%%%:  558-block  4
       1*:  559:    assert(all_tutorials[1].get_presenter() == "Rudimental");
        1:  559-block  0
        1:  559-block  1
    %%%%%:  559-block  2
        1:  559-block  3
    %%%%%:  559-block  4
        -:  560:
       1*:  561:    assert(all_tutorials[0].get_duration() == std::make_pair(3, 58));
        1:  561-block  0
        1:  561-block  1
        1:  561-block  2
    %%%%%:  561-block  3
        1:  561-block  4
    %%%%%:  561-block  5
    $$$$$:  561-block  6
    $$$$$:  561-block  7
    $$$$$:  561-block  8
       1*:  562:    assert(all_tutorials[1].get_duration() == std::make_pair(5, 15));
        1:  562-block  0
        1:  562-block  1
        1:  562-block  2
    %%%%%:  562-block  3
        1:  562-block  4
    %%%%%:  562-block  5
    $$$$$:  562-block  6
    $$$$$:  562-block  7
    $$$$$:  562-block  8
        -:  563:
       1*:  564:    assert(all_tutorials[0].get_number_of_likes() == 41876);
        1:  564-block  0
        1:  564-block  1
    %%%%%:  564-block  2
        1:  564-block  3
    %%%%%:  564-block  4
       1*:  565:    assert(all_tutorials[1].get_number_of_likes() == 980762);
        1:  565-block  0
        1:  565-block  1
    %%%%%:  565-block  2
        1:  565-block  3
    %%%%%:  565-block  4
        -:  566:
       1*:  567:    assert(all_tutorials[0].get_link() == "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  567-block  0
        1:  567-block  1
    %%%%%:  567-block  2
        1:  567-block  3
    %%%%%:  567-block  4
       1*:  568:    assert(all_tutorials[1].get_link() == "https://www.youtube.com/watch?v=M97vR2V4vTs");
        1:  568-block  0
        1:  568-block  1
    %%%%%:  568-block  2
        1:  568-block  3
    %%%%%:  568-block  4
        1:  569:}
        -:  570:
        1:  571:void Tests::increase_likes_service_test() {
        2:  572:    Repository repository;
        1:  572-block  0
    $$$$$:  572-block  1
        2:  573:    AdminService admin_service = {repository};
        1:  573-block  0
    $$$$$:  573-block  1
        -:  574:
        1:  575:    admin_service.add_tutorial_admin_service("Hold on","Rusko", std::make_pair(3, 58), 41876, "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  575-block  0
        1:  575-block  1
        1:  575-block  2
        1:  575-block  3
        1:  575-block  4
        1:  575-block  5
    $$$$$:  575-block  6
    $$$$$:  575-block  7
    $$$$$:  575-block  8
    $$$$$:  575-block  9
    $$$$$:  575-block 10
    $$$$$:  575-block 11
    $$$$$:  575-block 12
    $$$$$:  575-block 13
    $$$$$:  575-block 14
    $$$$$:  575-block 15
    $$$$$:  575-block 16
    $$$$$:  575-block 17
    $$$$$:  575-block 18
    $$$$$:  575-block 19
    $$$$$:  575-block 20
        1:  576:    admin_service.add_tutorial_admin_service("Waiting all night","Rudimental", std::make_pair(5, 15), 980762, "https://www.youtube.com/watch?v=M97vR2V4vTs");
        1:  576-block  0
        1:  576-block  1
        1:  576-block  2
        1:  576-block  3
        1:  576-block  4
    $$$$$:  576-block  5
    $$$$$:  576-block  6
    $$$$$:  576-block  7
    $$$$$:  576-block  8
    $$$$$:  576-block  9
    $$$$$:  576-block 10
    $$$$$:  576-block 11
    $$$$$:  576-block 12
    $$$$$:  576-block 13
    $$$$$:  576-block 14
    $$$$$:  576-block 15
    $$$$$:  576-block 16
    $$$$$:  576-block 17
    $$$$$:  576-block 18
    $$$$$:  576-block 19
        -:  577:
        1:  578:    admin_service.increase_likes_tutorial_service("https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  578-block  0
        1:  578-block  1
    $$$$$:  578-block  2
    $$$$$:  578-block  3
    $$$$$:  578-block  4
    $$$$$:  578-block  5
        -:  579:
        2:  580:    std::vector<Tutorial> all_tutorials = admin_service.all_tutorials_service();
        1:  580-block  0
    $$$$$:  580-block  1
        -:  581:
       1*:  582:    assert(admin_service.size_repo() == 2);
        1:  582-block  0
        1:  582-block  1
    %%%%%:  582-block  2
        1:  582-block  3
    %%%%%:  582-block  4
        -:  583:
       1*:  584:    assert(all_tutorials[0].get_title() == "Hold on");
        1:  584-block  0
        1:  584-block  1
    %%%%%:  584-block  2
        1:  584-block  3
    %%%%%:  584-block  4
       1*:  585:    assert(all_tutorials[1].get_title() == "Waiting all night");
        1:  585-block  0
        1:  585-block  1
    %%%%%:  585-block  2
        1:  585-block  3
    %%%%%:  585-block  4
        -:  586:
       1*:  587:    assert(all_tutorials[0].get_presenter() == "Rusko");
        1:  587-block  0
        1:  587-block  1
    %%%%%:  587-block  2
        1:  587-block  3
    %%%%%:  587-block  4
       1*:  588:    assert(all_tutorials[1].get_presenter() == "Rudimental");
        1:  588-block  0
        1:  588-block  1
    %%%%%:  588-block  2
        1:  588-block  3
    %%%%%:  588-block  4
        -:  589:
       1*:  590:    assert(all_tutorials[0].get_duration() == std::make_pair(3, 58));
        1:  590-block  0
        1:  590-block  1
        1:  590-block  2
    %%%%%:  590-block  3
        1:  590-block  4
    %%%%%:  590-block  5
    $$$$$:  590-block  6
    $$$$$:  590-block  7
    $$$$$:  590-block  8
       1*:  591:    assert(all_tutorials[1].get_duration() == std::make_pair(5, 15));
        1:  591-block  0
        1:  591-block  1
        1:  591-block  2
    %%%%%:  591-block  3
        1:  591-block  4
    %%%%%:  591-block  5
    $$$$$:  591-block  6
    $$$$$:  591-block  7
    $$$$$:  591-block  8
        -:  592:
       1*:  593:    assert(all_tutorials[0].get_number_of_likes() == 41877);
        1:  593-block  0
        1:  593-block  1
    %%%%%:  593-block  2
        1:  593-block  3
    %%%%%:  593-block  4
       1*:  594:    assert(all_tutorials[1].get_number_of_likes() == 980762);
        1:  594-block  0
        1:  594-block  1
    %%%%%:  594-block  2
        1:  594-block  3
    %%%%%:  594-block  4
        -:  595:
       1*:  596:    assert(all_tutorials[0].get_link() == "https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  596-block  0
        1:  596-block  1
    %%%%%:  596-block  2
        1:  596-block  3
    %%%%%:  596-block  4
       1*:  597:    assert(all_tutorials[1].get_link() == "https://www.youtube.com/watch?v=M97vR2V4vTs");
        1:  597-block  0
        1:  597-block  1
    %%%%%:  597-block  2
        1:  597-block  3
    %%%%%:  597-block  4
        1:  598:}
        -:  599:
        1:  600:void Tests::add_tutorial_user_service_test() {
        2:  601:    WatchListRepository repository;
        1:  601-block  0
    $$$$$:  601-block  1
        2:  602:    UserService user_service = {repository};
        1:  602-block  0
    $$$$$:  602-block  1
        3:  603:    Tutorial tutorial_test1 = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:  603-block  0
        1:  603-block  1
        1:  603-block  2
        1:  603-block  3
        1:  603-block  4
    $$$$$:  603-block  5
    $$$$$:  603-block  6
    $$$$$:  603-block  7
    $$$$$:  603-block  8
    $$$$$:  603-block  9
    $$$$$:  603-block 10
    $$$$$:  603-block 11
    $$$$$:  603-block 12
    $$$$$:  603-block 13
        3:  604:    Tutorial tutorial_test2 = {"TEST2", "MARA", std::make_pair(22, 10), 6, "https://www.youtube.com/watch?v=8RVKLcaIAE8"};
        1:  604-block  0
        1:  604-block  1
        1:  604-block  2
        1:  604-block  3
        1:  604-block  4
    $$$$$:  604-block  5
    $$$$$:  604-block  6
    $$$$$:  604-block  7
    $$$$$:  604-block  8
    $$$$$:  604-block  9
    $$$$$:  604-block 10
    $$$$$:  604-block 11
    $$$$$:  604-block 12
    $$$$$:  604-block 13
        -:  605:
        1:  606:    int success = user_service.add_tutorial_watch_list_user_service(tutorial_test1);
       1*:  607:    assert(success == 0);
        1:  607-block  0
    %%%%%:  607-block  1
        1:  607-block  2
    %%%%%:  607-block  3
        -:  608:
        1:  609:    success = user_service.add_tutorial_watch_list_user_service(tutorial_test1);
        1:  609-block  0
       1*:  610:    assert(success == 1);
        1:  610-block  0
    %%%%%:  610-block  1
        1:  610-block  2
    %%%%%:  610-block  3
        1:  611:}
        -:  612:
        1:  613:void Tests::remove_tutorial_user_service_test() {
        2:  614:    WatchListRepository repository;
        1:  614-block  0
    $$$$$:  614-block  1
        2:  615:    UserService user_service = {repository};
        1:  615-block  0
    $$$$$:  615-block  1
        -:  616:    int success;
        3:  617:    Tutorial tutorial_test1 = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:  617-block  0
        1:  617-block  1
        1:  617-block  2
        1:  617-block  3
        1:  617-block  4
    $$$$$:  617-block  5
    $$$$$:  617-block  6
    $$$$$:  617-block  7
    $$$$$:  617-block  8
    $$$$$:  617-block  9
    $$$$$:  617-block 10
    $$$$$:  617-block 11
    $$$$$:  617-block 12
    $$$$$:  617-block 13
        3:  618:    Tutorial tutorial_test2 = {"TEST2", "MARA", std::make_pair(22, 10), 6, "https://www.youtube.com/watch?v=8RVKLcaIAE8"};
        1:  618-block  0
        1:  618-block  1
        1:  618-block  2
        1:  618-block  3
    $$$$$:  618-block  4
    $$$$$:  618-block  5
    $$$$$:  618-block  6
    $$$$$:  618-block  7
    $$$$$:  618-block  8
    $$$$$:  618-block  9
    $$$$$:  618-block 10
    $$$$$:  618-block 11
    $$$$$:  618-block 12
        -:  619:
        1:  620:    success = user_service.add_tutorial_watch_list_user_service(tutorial_test1);
       1*:  621:    assert(success == 0);
        1:  621-block  0
    %%%%%:  621-block  1
        1:  621-block  2
    %%%%%:  621-block  3
        -:  622:
        1:  623:    success = user_service.add_tutorial_watch_list_user_service(tutorial_test2);
        1:  623-block  0
       1*:  624:    assert(success == 0);
        1:  624-block  0
    %%%%%:  624-block  1
        1:  624-block  2
    %%%%%:  624-block  3
        -:  625:
        1:  626:    success = user_service.remove_tutorial_watch_list_user_service("https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  626-block  0
        1:  626-block  1
        1:  626-block  2
    $$$$$:  626-block  3
    $$$$$:  626-block  4
    $$$$$:  626-block  5
    $$$$$:  626-block  6
       1*:  627:    assert(success == 0);
    %%%%%:  627-block  0
        1:  627-block  1
    %%%%%:  627-block  2
        -:  628:
        1:  629:    success = user_service.remove_tutorial_watch_list_user_service("https://www.youtube.com/watch?v=8RVKLcaIAE8");
        1:  629-block  0
        1:  629-block  1
        1:  629-block  2
    $$$$$:  629-block  3
    $$$$$:  629-block  4
    $$$$$:  629-block  5
    $$$$$:  629-block  6
       1*:  630:    assert(success == 1);
    %%%%%:  630-block  0
        1:  630-block  1
    %%%%%:  630-block  2
        -:  631:
        2:  632:    Tutorial tutorial1 = user_service.get_tutorial_by_position_watch_list_user_service(0);
        1:  632-block  0
        1:  632-block  1
    $$$$$:  632-block  2
        -:  633:
       1*:  634:    assert(tutorial1.get_title() == "TEST");
        1:  634-block  0
        1:  634-block  1
    %%%%%:  634-block  2
        1:  634-block  3
    %%%%%:  634-block  4
       1*:  635:    assert(tutorial1.get_presenter() == "ANI");
        1:  635-block  0
        1:  635-block  1
    %%%%%:  635-block  2
        1:  635-block  3
    %%%%%:  635-block  4
       1*:  636:    assert(tutorial1.get_duration() == std::make_pair(21, 10));
        1:  636-block  0
        1:  636-block  1
        1:  636-block  2
    %%%%%:  636-block  3
        1:  636-block  4
    %%%%%:  636-block  5
    $$$$$:  636-block  6
    $$$$$:  636-block  7
    $$$$$:  636-block  8
       1*:  637:    assert(tutorial1.get_number_of_likes() == 5);
        1:  637-block  0
        1:  637-block  1
    %%%%%:  637-block  2
        1:  637-block  3
    %%%%%:  637-block  4
       1*:  638:    assert(tutorial1.get_link() == "https://www.youtube.com/watch?v=BSzSn-PRdtI");
        1:  638-block  0
        1:  638-block  1
    %%%%%:  638-block  2
        1:  638-block  3
    %%%%%:  638-block  4
        1:  639:}
        -:  640:
        1:  641:void Tests::all_tutorials_user_service_test() {
        2:  642:    WatchListRepository repository;
        1:  642-block  0
    $$$$$:  642-block  1
        2:  643:    UserService user_service = {repository};
        1:  643-block  0
    $$$$$:  643-block  1
        -:  644:    int success;
        3:  645:    Tutorial tutorial_test1 = {"TEST", "ANI", std::make_pair(21, 10), 5, "https://www.youtube.com/watch?v=BSzSn-PRdtI"};
        1:  645-block  0
        1:  645-block  1
        1:  645-block  2
        1:  645-block  3
        1:  645-block  4
    $$$$$:  645-block  5
    $$$$$:  645-block  6
    $$$$$:  645-block  7
    $$$$$:  645-block  8
    $$$$$:  645-block  9
    $$$$$:  645-block 10
    $$$$$:  645-block 11
    $$$$$:  645-block 12
    $$$$$:  645-block 13
        3:  646:    Tutorial tutorial_test2 = {"TEST2", "MARA", std::make_pair(22, 10), 6, "https://www.youtube.com/watch?v=8RVKLcaIAE8"};
        1:  646-block  0
        1:  646-block  1
        1:  646-block  2
        1:  646-block  3
    $$$$$:  646-block  4
    $$$$$:  646-block  5
    $$$$$:  646-block  6
    $$$$$:  646-block  7
    $$$$$:  646-block  8
    $$$$$:  646-block  9
    $$$$$:  646-block 10
    $$$$$:  646-block 11
    $$$$$:  646-block 12
        -:  647:
        1:  648:    success = user_service.add_tutorial_watch_list_user_service(tutorial_test1);
       1*:  649:    assert(success == 0);
        1:  649-block  0
    %%%%%:  649-block  1
        1:  649-block  2
    %%%%%:  649-block  3
        -:  650:
        1:  651:    success = user_service.add_tutorial_watch_list_user_service(tutorial_test2);
        1:  651-block  0
       1*:  652:    assert(success == 0);
        1:  652-block  0
    %%%%%:  652-block  1
        1:  652-block  2
    %%%%%:  652-block  3
        -:  653:
        2:  654:    std::vector <Tutorial> all_tutorial = user_service.all_tutorials_watch_list_service();
        1:  654-block  0
        1:  654-block  1
    $$$$$:  654-block  2
        -:  655:
       1*:  656:    assert(user_service.size_watch_list_repo() == 2);
        1:  656-block  0
        1:  656-block  1
    %%%%%:  656-block  2
        1:  656-block  3
    %%%%%:  656-block  4
        -:  657:
       1*:  658:    assert(all_tutorial[0].get_title() == "TEST");
        1:  658-block  0
        1:  658-block  1
    %%%%%:  658-block  2
        1:  658-block  3
    %%%%%:  658-block  4
       1*:  659:    assert(all_tutorial[1].get_title() == "TEST2");
        1:  659-block  0
        1:  659-block  1
    %%%%%:  659-block  2
        1:  659-block  3
    %%%%%:  659-block  4
        -:  660:
       1*:  661:    assert(all_tutorial[0].get_presenter() == "ANI");
        1:  661-block  0
        1:  661-block  1
    %%%%%:  661-block  2
        1:  661-block  3
    %%%%%:  661-block  4
       1*:  662:    assert(all_tutorial[1].get_presenter() == "MARA");
        1:  662-block  0
        1:  662-block  1
    %%%%%:  662-block  2
        1:  662-block  3
    %%%%%:  662-block  4
        -:  663:
        1:  664:}
